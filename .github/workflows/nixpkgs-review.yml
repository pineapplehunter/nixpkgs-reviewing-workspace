name: üõ†Ô∏èüëÄ
# https://stackoverflow.com/questions/71155641/github-actions-how-to-view-inputs-for-workflow-dispatch
# https://docs.github.com/ja/actions/reference/evaluate-expressions-in-workflows-and-actions#format
run-name: |
  ${{ inputs.pr-number && format('NixOS/nixpkgs#{0}', inputs.pr-number) || format('nixpkgs-review: {0}', inputs.args) }}
# run-name: '[Experimental]' # Enable only when developing
on:
  # pull_request: # Enable only when developing
  workflow_dispatch:
    inputs:
      pr-number:
        description: 'PR number'
        required: false
        type: string # Don't use `number` type here, GitHub Apps in both Android and iOS forces them as 'Float'
        default: ''
      runners:
        description: 'Runners'
        required: true
        # It does not allow list and multiline string.
        #   - https://github.com/orgs/community/discussions/12882
        #   - https://github.com/actions/toolkit/issues/184
        type: string
        # - ubuntu-24.04 # x86_64
        # - ubuntu-24.04-arm # aarch64-linux
        # - macos-15 # aarch64
        # - macos-15-intel # x86_64
        default: |
          [ "ubuntu-24.04", "ubuntu-24.04-arm", "macos-15", "macos-15-intel" ]
      sandbox:
        description: 'Sandbox mode'
        type: boolean # `inputs.sandbox` will be boolean, but `github.event.inputs.sandbox` will be string. This is hacky, but useful for using the value in shellscripts
        default: true
      free-up-diskspace:
        description: 'Free up disk space'
        type: boolean
        default: false
      args:
        # Use this option if your requirement is not simple. Might be needed for mass-rebuilds.

        # For example:
        # ```
        # pr 380842 -p crystalline -p ameba -p ameba-ls -p mint --package-regex 'crystal_.*' --print-result
        # ```

        # See https://github.com/Mic92/nixpkgs-review/blob/d46f823c058c445e8b50ca93b32c495b3dda1b25/README.md?plain=1#L312-L347 for detail
        description: 'Customized arguments. Ignore `pr-number`'
        required: false
        type: string
        default: ''

# env:
#   pr-number: '42' # Enable only when developing

jobs:
  review:
    strategy:
      fail-fast: false
      matrix:
        runner: '${{ fromJson(inputs.runners) }}'
    continue-on-error: true # Simply avoiding the state for #91
    runs-on: ${{ matrix.runner }}
    # timeout-minutes: 180 # Any limitations might not fit for this repository. So temporary disabling
    steps:
      - name: Make sure dependent environments
        id: get-meta
        run: | # shell
          #
          # https://github.com/Mic92/nixpkgs-review/blob/055465e55d131ffb1e1617f46d3bade0b87bbe69/nixpkgs_review/builddir.py#L24-L36
          echo "cache_dir=${XDG_CACHE_HOME:-${HOME}/.cache}" | tee -a "$GITHUB_OUTPUT"

      - name: Validate options
        if: ${{ inputs.args != '' && inputs.pr-number != '' }}
        run: 'exit 2'

      - name: Validate PR number
        if: ${{ inputs.pr-number != '' }}
        run: |
          input="${{ github.event.inputs.pr-number }}"

          # Check if the input is a positive integer (greater than 0)
          if ! [[ "$input" =~ ^[1-9][0-9]*$ ]]; then
            echo "‚ùå Error: The input \"$input\" is not a valid positive integer (e.g., 1, 42)."
            exit 1
          fi

          echo "‚úÖ Input \"$input\" is a valid positive integer."

      - name: enable unprivileged userns clone
        if: runner.os == 'Linux'
        run: |
          sudo sysctl -w kernel.apparmor_restrict_unprivileged_userns=0
          sudo sysctl -w kernel.unprivileged_userns_clone=1

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          repository: 'NixOS/nixpkgs'

      - name: Make sure the shallow clone or not
        # Often needed for debugging purpose. See GH-26 https://github.com/Mic92/nixpkgs-review/pull/426/files#diff-068fea7dedadb885b7dcccc0fe1bc843caa6f1da0c6622ee7a7d56e99c31475aR598-R606
        run: git rev-parse --is-shallow-repository

      - uses: cachix/install-nix-action@9280e7aca88deada44c930f1e2c78e21c3ae3edd # v31.7.0
        with:
          extra_nix_config: |
            sandbox = ${{ github.event.inputs.sandbox }}
      - name: Outputs nix version and the config
        run: |
          nix --version
          nix config show

      - name: Ensure sandbox mode
        run: |
          set -x
          [[ "$(nix config show sandbox)" == '${{ github.event.inputs.sandbox }}' ]]

      - name: Logging disk space
        run: df -h

      - name: Clean space as per https://github.com/actions/virtual-environments/issues/709
        # NOTE: This workflow removed 14 Gib in 50sec
        # On the otherhand, additional apt purge step removed 6 Gib in 100s, so I don't want to use the additional steps for now
        if: ${{ inputs.free-up-diskspace }}
        run: |
          docker images
          docker image prune --all --force
          sudo rm -rf '/opt/ghc'
          sudo rm -rf '/usr/share/dotnet'
          sudo rm -rf '$AGENT_TOOLSDIRECTORY'
          sudo rm -rf '/usr/local/lib/android'
          sudo rm -rf '/usr/local/share/boost'
          df -h

      - name: Run binary-cached nixpkgs-review for PR
        if: ${{ inputs.pr-number != '' }}
        env:
          # https://github.com/Mic92/nixpkgs-review/blob/055465e55d131ffb1e1617f46d3bade0b87bbe69/README.md?plain=1#L239-L260
          GITHUB_TOKEN: '${{ github.token }}'
        run: | # shell
          #
          nix run 'github:NixOS/nixpkgs/nixpkgs-unstable#nixpkgs-review' -- pr '${{ inputs.pr-number }}' --print-result

      - name: Run binary-cached nixpkgs-review for custom args
        if: ${{ inputs.args != '' }}
        env:
          # https://github.com/Mic92/nixpkgs-review/blob/055465e55d131ffb1e1617f46d3bade0b87bbe69/README.md?plain=1#L239-L260
          GITHUB_TOKEN: '${{ github.token }}'
        run: | # shell
          #
          nix run 'github:NixOS/nixpkgs/nixpkgs-unstable#nixpkgs-review' -- ${{ inputs.args }}

      - name: Logging disk space
        run: df -h

      - name: Upload artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: 'nixpkgs-review-files-pr-${{ inputs.pr-number }}-${{ runner.arch }}-${{ runner.os }}'
          path: '${{ steps.get-meta.outputs.cache_dir }}/nixpkgs-review/'
          if-no-files-found: 'error'
          # This is a broken change in their minor version updates. See https://github.com/actions/upload-artifact/commit/cb6558bb10fe4afe4054d0be4b3136e673eb5e7f and https://github.com/actions/upload-artifact/pull/598
          include-hidden-files: 'true' # Required for `bin/.bin-wrapped`

  report:
    needs: [review]
    uses: ./.github/workflows/report.yml
    secrets: inherit
    with:
      run_id: '${{ github.run_id }}'
